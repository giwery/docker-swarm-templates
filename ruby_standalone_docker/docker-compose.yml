version: '2'

networks:
  service-tier:
    external: true
  app:

volumes:
  uploads:
  dbdata:
  redisdata:

services:
  nginx:
    restart: always
    image: nginx:stable
    container_name: "${PROJECT_NAME}_nginx"
    networks:
      - app
      - service-tier
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf:ro"
    labels:
      - "traefik.backend=${PROJECT_NAME}_nginx"
      - "traefik.frontend.rule=Host:${VIRTUAL_HOST}"
      - "traefik.docker.network=service-tier"
      - "traefik.port=80"
      - "traefik.enable=true"
    volumes_from:
      - app
    links:
      - app
    environment:
      VIRTUAL_HOST: ${VIRTUAL_HOST}
      VIRTUAL_NETWORK: app
  app:
    restart: always
    container_name: "${PROJECT_NAME}_app"
    image: "${REGISTRY}/${PROJECT_NAME}:latest"
    volumes:
      - uploads:/app/public/uploads
    links:
      - db
    networks:
      - app
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOST: ${POSTGRES_HOST}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      VIRTUAL_HOST: ${VIRTUAL_HOST}
      JOB_WORKER_URL: ${JOB_WORKER_URL}
      SIDEKIQ_ENABLED: "true"
      RAILS_LOG_TO_STDOUT: "true"
    depends_on:
      - db
  db:
    restart: always
    image: postgres:9.6
    container_name: "${PROJECT_NAME}_db"
    networks:
      - app
    environment:
      POSTGRES_DB: "${POSTGRES_DB}_production"
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
      - dbdata:/var/lib/postgresql/data
  sidekiq:
    restart: always
    container_name: "${PROJECT_NAME}_sidekiq"
    image: "${REGISTRY}/${PROJECT_NAME}:latest"
    volumes:
      - uploads:/app/public/uploads
    entrypoint: ./bin/sidekiq.sh
    links:
      - db
    networks:
      - app
    depends_on:
      - db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOST: ${POSTGRES_HOST}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      VIRTUAL_HOST: ${VIRTUAL_HOST}
      JOB_WORKER_URL: ${JOB_WORKER_URL}
  redis:
    restart: always
    container_name: "${PROJECT_NAME}_redis"
    image: redis:latest
    volumes:
      - redisdata:/data
    links:
      - app
    networks:
      - app
    depends_on:
      - app
